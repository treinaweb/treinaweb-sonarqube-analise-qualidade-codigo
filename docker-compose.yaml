services:
  sonar-db:
    image: postgres:13
    environment:
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=sonar
      - POSTGRES_DB=sonar
    volumes:
      - sonar_db:/var/lib/postgresql/data
    networks:
      - sonarnet
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sonar"]
      interval: 5s
      timeout: 60s
      retries: 3

  sonarqube:
    image: sonarqube:10.5.1-community
    environment:
      - SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true
      - SONAR_JDBC_URL=jdbc:postgresql://sonar-db:5432/sonar
      - SONAR_JDBC_USERNAME=sonar
      - SONAR_JDBC_PASSWORD=sonar
    ports:
      - "9000:9000"
    volumes:
      - sonarqube_conf:/opt/sonarqube/conf
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
      - sonarqube_temp:/opt/sonarqube/temp
    depends_on:
      sonar-db:
        condition: service_healthy
    networks:
      - sonarnet

  sonar-scanner:
    image: sonarsource/sonar-scanner-cli:latest
    volumes:
      - .:/usr/src
    environment:
      - SONAR_HOST_URL=http://sonarqube:9000
    depends_on:
      - sonarqube
    profiles:
      - scanner
    networks:
      - sonarnet

networks:
  sonarnet:
    driver: bridge

volumes:
  sonar_db:
  sonarqube_conf:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  sonarqube_temp: